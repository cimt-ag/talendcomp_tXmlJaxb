<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.designer.codegen.config.CodeGeneratorArgument
	" 
%>
<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();	
    String xsdFile = ElementParameterParser.getValue(node, "__XSD_FILE__");
    if (xsdFile == null || xsdFile.trim().isEmpty()) {
    	 xsdFile = "null";
    }
    String modelCacheDir = ElementParameterParser.getValue(node, "__MODELCACHE_DIR__");
    if (modelCacheDir == null || modelCacheDir.trim().isEmpty()) {
    	 modelCacheDir = "null";
    }
    boolean createJar = "true".equals(ElementParameterParser.getValue(node, "__CREATE_JAR_FILE__"));
    String jarFilePath = ElementParameterParser.getValue(node, "__JAR_FILE__");
    if (jarFilePath == null || jarFilePath.trim().isEmpty()) {
    	 jarFilePath = "null";
    }
    boolean printAbstractClasses = "true".equals(ElementParameterParser.getValue(node, "__PRINTOUT_ABSTRACT_CLASSES__"));
    boolean createGraph = "true".equals(ElementParameterParser.getValue(node, "__PRINTOUT_DOCUMENT_GRAPH__"));
    boolean enableBasicSubstitution = "true".equals(ElementParameterParser.getValue(node, "__PERFORM_TYPE_SUBSTITUTE__"));
%>
	{
		de.cimt.talendcomp.xmldynamic.XJCOptions options = new de.cimt.talendcomp.xmldynamic.XJCOptions();
      options.createGraph = <%=createGraph%>;
      options.enableBasicSubstitution = <%=enableBasicSubstitution%>;

		String modelCacheDir = <%=modelCacheDir%>;
		if (modelCacheDir != null && modelCacheDir.trim().isEmpty() == false) {
			 options.targetDir = de.cimt.talendcomp.xmldynamic.ModelBuilder.setupModelDir(modelCacheDir);
		} else {
			throw new Exception("Model Cache Dir cannot be null or empty");
		}
		String xsdFile = <%=xsdFile%>;
		if (xsdFile != null && xsdFile.trim().isEmpty() == false) {
			 java.io.File file = new java.io.File(xsdFile);
			 if (file.exists() == false) {
			 	  throw new Exception("XSD file: " + xsdFile + " does not exists!");
			 }
			 options.addGrammar(file);
		} else {
			 throw new Exception("No xsd file path given!");
		}
		// build the model
		de.cimt.talendcomp.xmldynamic.ModelBuilder.generate(options, new com.sun.codemodel.JCodeModel());
		de.cimt.talendcomp.xmldynamic.Util.printContexts(<%=printAbstractClasses%>);
<%	if (createJar) { %>
		de.cimt.talendcomp.xmldynamic.JarUtil jarBuilder = new de.cimt.talendcomp.xmldynamic.JarUtil();
		jarBuilder.setClassFilesRootDir(modelCacheDir);
		String jarFilePath = <%=jarFilePath%>;
		jarBuilder.setJarFilePath(jarFilePath);
		jarBuilder.create();
		globalMap.put("<%=cid%>_JAR_FILE", jarFilePath);
<% } %>
   }