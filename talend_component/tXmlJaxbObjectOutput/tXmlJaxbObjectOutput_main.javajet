<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.utils.NodeUtil
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List 
		java.util.ArrayList 
    	java.util.Map		
	" 
%>
<% 
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode) codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	IConnection conn = null;
	List<? extends IConnection> inConns = NodeUtil.getIncomingConnections(node, IConnectionCategory.DATA);
	if (inConns.size() > 0) {
		conn = inConns.get(0);
	}
	List<IMetadataColumn> listColumns = new ArrayList<IMetadataColumn>(); // dummy
	List<IMetadataTable> metadatas = node.getMetadataList();
	if (metadatas != null && metadatas.size() > 0) {
    	IMetadataTable metadata = metadatas.get(0);
    	if (metadata != null) {
    		listColumns = metadata.getListColumns();
		}
	}
	@SuppressWarnings("unchecked")	
	List<Map<String, String>> configList = (List<Map<String,String>>) ElementParameterParser.getObjectValue(node, "__COLUMN_CONFIG__");
   String className = ElementParameterParser.getValue(node, "__CLASS_NAME__");
   boolean isRoot = "true".equals(ElementParameterParser.getValue(node, "__IS_ROOT__"));
   String parentObject = ElementParameterParser.getValue(node, "__PARENT_OBJECT_COMPONENT__");
   String parentAttribute = ElementParameterParser.getValue(node, "__PARENT_OBJECT_ATTRIBUTE__");
%>
	{
		// now create the new object
		de.cimt.talendcomp.xmldynamic.TXMLObject currentObject = (de.cimt.talendcomp.xmldynamic.TXMLObject) Class.forName(<%=className%>).newInstance();
		globalMap.put("<%=cid%>_CURRENT_OBJECT", currentObject);
		Integer numberObjects = (Integer) globalMap.get("<%=cid%>_NB_LINE");
		if (numberObjects == null) {
			numberObjects = 0;
		}
		numberObjects = numberObjects + 1;
		globalMap.put("<%=cid%>_NB_LINE", numberObjects);
		boolean ok = false;
		// fill the attributes
<% if (conn != null) {
   	for (int i = 0; i < listColumns.size(); i++) {
			IMetadataColumn mc = listColumns.get(i);
			Map<String, String> config = configList.get(i);
			boolean use = "true".equals(config.get("USE"));
			if (use == false) {
				continue; // skip over unused columns
			}
			String fieldName = config.get("ATTRIBUTE_ALIAS");
			boolean ignoreMissing = "true".equals(config.get("IGNORE_MISSING"));
			if (fieldName == null || fieldName.trim().isEmpty() || fieldName.equals("\"\"")) {
				fieldName = "\"" + mc.getLabel() + "\"";
			}
			String pattern = mc.getPattern();
			String javaClassName = mc.getTalendType().substring(3); %>
		ok = currentObject.set(<%=fieldName%>, <%=conn.getName()%>.<%=mc.getLabel()%>);
<%    	if (ignoreMissing == false) { %>
		if (ok == false) {
			throw new Exception("Attribute: <%=className.replace("\"","")%>.<%=fieldName.replace("\"","")%> does not exist!");
		}
<%    	}
      } // for
	} // if (conn != null)
   if (isRoot == false) { %>
		String parentObjectCompentName = "<%=parentObject%>";
		de.cimt.talendcomp.xmldynamic.TXMLObject parentObject = (de.cimt.talendcomp.xmldynamic.TXMLObject) globalMap.get(parentObjectCompentName + "_CURRENT_OBJECT");
		if (parentObject == null) {
			throw new Exception("Parent object: " + parentObjectCompentName + " does not exist!");
		}
		String parentAttribute = <%=parentAttribute%>;
		if (parentObject.addOrSet(parentAttribute, currentObject) == false) {
			throw new Exception("Parent Attribute: " + parentObject.getClass().getName() + "." + parentAttribute + " does not exist!");
		}
<% } // if (isRoot %>
	}